View(finally_final_df)
finally_final_df <- as.numeric(c('NPT4_PUB-AVERAGE-ANNUAL-COST', 'NPT4_PRIV', 'SAT_AVG', 'md_earn_wne_p10-REPORTED-EARNINGS', 'C150_4_POOLED_SUPP-REPORTED-GRAD-RATE'))
finally_final_df$`NPT4_PUB-AVERAGE-ANNUAL-COST`<- as.numeric('NPT4_PUB-AVERAGE-ANNUAL-COST')
finally_final_df <- final_df %>%
select('schname', 'month', 'st_index', 'NPT4_PUB-AVERAGE-ANNUAL-COST', 'NPT4_PRIV', 'PREDDEG', 'SAT_AVG', 'CURROPER','md_earn_wne_p10-REPORTED-EARNINGS', 'C150_4_POOLED_SUPP-REPORTED-GRAD-RATE') %>%
filter(PREDDEG == 3, CURROPER == 1, `md_earn_wne_p10-REPORTED-EARNINGS` != 'PrivacySupressed')
scorecard <- na.omit(scorecard)
name_links <- read_csv('id_name_link.csv')
name_links <- name_links %>%
group_by(schname) %>%
mutate(n = n()) %>%
filter(n == 1)
g_trands_to_id_name <-
inner_join(G_data, name_links, by = 'schname')
final_df <- inner_join(g_trands_to_id_name, scorecard, by = c('unitid' = 'UNITID'))
knitr::opts_chunk$set(echo = TRUE)
## knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file()) HOW TO SET UP A WD?
# Installing packages
library(tidyverse)
library(purrr)
library(lubridate)
# Preparing Google trends data
# Merging Google trends data
g_files <- list.files(pattern = 'trends_up_to', full.names = TRUE)
G_data <- map_df(g_files, read_csv)
G_data <- na.omit(G_data)
#Converting date from string to date format
#summary(G_data)
G_data <- G_data %>%
mutate(YMD = ymd(str_sub(G_data$monthorweek, end = 10)))
# creating a month variable for aggregation
G_data <- G_data %>% mutate(month = floor_date(YMD, unit = 'month'))
# Standardizing Index variable
G_data <- G_data %>%
group_by(schname) %>%
mutate(st_index = (index - mean(index))/sd(index))
#summary(G_data)
#reading in the Scorecard Data
scorecard <- read_csv('Most+Recent+Cohorts+(Scorecard+Elements).csv')
scorecard <- na.omit(scorecard)
name_links <- read_csv('id_name_link.csv')
# removing duplicates
name_links <- name_links %>%
group_by(schname) %>%
mutate(n = n()) %>%
filter(n == 1)
# merging the data frames
g_trands_to_id_name <-
inner_join(G_data, name_links, by = 'schname')
final_df <- inner_join(g_trands_to_id_name, scorecard, by = c('unitid' = 'UNITID'))
finally_final_df <- final_df %>%
select('schname', 'month', 'st_index', 'NPT4_PUB-AVERAGE-ANNUAL-COST', 'NPT4_PRIV', 'PREDDEG', 'SAT_AVG', 'CURROPER','md_earn_wne_p10-REPORTED-EARNINGS', 'C150_4_POOLED_SUPP-REPORTED-GRAD-RATE') %>%
filter(PREDDEG == 3, CURROPER == 1, `md_earn_wne_p10-REPORTED-EARNINGS` != 'PrivacySupressed')
finally_final_df <- finally_final_df %>%
mutate_if(is.character, as.numeric)
View(finally_final_df)
View(finally_final_df)
G_summary <- finally_final_df %>%
group_by(schname, month) %>%
summarize(
mean_index = mean(st_index),
annual_cost_pub = unique(`NPT4_PUB-AVERAGE-ANNUAL-COST`),
annual_cost_priv = unique(NPT4_PRIV),
SAT = unique(SAT_AVG),
grad_rate = unique(`C150_4_POOLED_SUPP-REPORTED-GRAD-RATE`),
median_earnings = unique(`md_earn_wne_p10-REPORTED-EARNINGS`)
)
View(G_summary)
final_df <- final_df %>%
mutate(
cost = case_when(CONTROL == 1 ~ `NPT4_PUB-AVERAGE-ANNUAL-COST`,
CONTROL == 2 ~ NPT4_PRIV,
CONTROL == 3 ~ NPT4_PRIV)
)
View(final_df)
finally_final_df <- final_df %>%
select('schname', 'month', 'st_index', 'cost', 'PREDDEG', 'SAT_AVG', 'CURROPER','md_earn_wne_p10-REPORTED-EARNINGS', 'C150_4_POOLED_SUPP-REPORTED-GRAD-RATE') %>%
filter(PREDDEG == 3, CURROPER == 1, `md_earn_wne_p10-REPORTED-EARNINGS` != 'PrivacySupressed')
finally_final_df <- finally_final_df %>%
mutate_if(is.character, as.numeric)
G_summary <- finally_final_df %>%
group_by(schname, month) %>%
summarize(
mean_index = mean(st_index),
annual_cost = unique(cost),
SAT = unique(SAT_AVG),
grad_rate = unique(`C150_4_POOLED_SUPP-REPORTED-GRAD-RATE`),
median_earnings = unique(`md_earn_wne_p10-REPORTED-EARNINGS`)
)
View(G_summary)
G_summary <- na.omit(G_summary)
View(G_summary)
knitr::opts_chunk$set(echo = TRUE)
## knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file()) HOW TO SET UP A WD?
# Installing packages
library(tidyverse)
library(purrr)
library(lubridate)
# Preparing Google trends data
# Merging Google trends data
g_files <- list.files(pattern = 'trends_up_to', full.names = TRUE)
G_data <- map_df(g_files, read_csv)
G_data <- na.omit(G_data)
#Converting date from string to date format
#summary(G_data)
G_data <- G_data %>%
mutate(YMD = ymd(str_sub(G_data$monthorweek, end = 10)))
# creating a month variable for aggregation
G_data <- G_data %>% mutate(month = floor_date(YMD, unit = 'month'))
# Standardizing Index variable
G_data <- G_data %>%
group_by(schname) %>%
mutate(st_index = (index - mean(index))/sd(index))
#summary(G_data)
#reading in the Scorecard Data
scorecard <- read_csv('Most+Recent+Cohorts+(Scorecard+Elements).csv')
scorecard <- na.omit(scorecard)
name_links <- read_csv('id_name_link.csv')
# removing duplicates
name_links <- name_links %>%
group_by(schname) %>%
mutate(n = n()) %>%
filter(n == 1)
# merging the data frames
g_trands_to_id_name <-
inner_join(G_data, name_links, by = 'schname')
final_df <- inner_join(g_trands_to_id_name, scorecard, by = c('unitid' = 'UNITID'))
final_df <- final_df %>%
mutate(
cost = case_when(CONTROL == 1 ~ `NPT4_PUB-AVERAGE-ANNUAL-COST`,
CONTROL == 2 ~ NPT4_PRIV,
CONTROL == 3 ~ NPT4_PRIV)
)
finally_final_df <- final_df %>%
select('schname', 'month', 'st_index', 'cost', 'PREDDEG', 'SAT_AVG', 'CURROPER','md_earn_wne_p10-REPORTED-EARNINGS', 'C150_4_POOLED_SUPP-REPORTED-GRAD-RATE') %>%
filter(PREDDEG == 3, CURROPER == 1, `md_earn_wne_p10-REPORTED-EARNINGS` != 'PrivacySupressed')
finally_final_df <- finally_final_df %>%
mutate_if(is.character, as.numeric)
G_summary <- finally_final_df %>%
group_by(schname, month) %>%
summarize(
mean_index = mean(st_index),
annual_cost = unique(cost),
SAT = unique(SAT_AVG),
grad_rate = unique(`C150_4_POOLED_SUPP-REPORTED-GRAD-RATE`),
median_earnings = unique(`md_earn_wne_p10-REPORTED-EARNINGS`)
)
G_summary <- na.omit(G_summary)
View(G_summary)
G_summary <- mutate(time = case_when(month >= as.Date('2015-09-01') ~ 1, month < as.Date('2015-09-01') ~ 0))
G_summary <- mutate(time = case_when(month >= '2015-09-01' ~ 1, month < '2015-09-01' ~ 0))
library(swirl)
swirl()
library(tidyverse)
library(lubridate)
library(fixest)
library(gtrendsR)
library(haven)
skip()
trends_time <- trends$interest_over_time %>% as_tibble() %>% mutate(date = ymd(date))
skip()
skip()
skip()
G_summary <- mutate(time = case_when(month >= as.Date("2015-09-01") ~ 1, month < as.date("2015-09-01") ~ 0))
View(G_summary)
quantile(G_summary$median_earnings)
0
bye()
G_summary <- mutate(hi_low = case_when(median_earnings <= 36600 ~ 0, median_earnings > 47300 ~ 1))
G_summary <- G_summary %>% mutate(hi_low = case_when(median_earnings <= 36600 ~ 0, median_earnings > 47300 ~ 1))
G_summary <- mutate(time = case_when(month >= as.Date("2015-09-01") ~ 1, month < as.date("2015-09-01") ~ 0))
View(G_summary)
typeof(G_data$month)
G_summary <- mutate(time = case_when(as.Date(month) >= as.Date("2015-09-01") ~ 1, as.Date(month) < as.date("2015-09-01") ~ 0))
G_summary <- mutate(month = ymd(month))
final_df <- final_df %>%
mutate(
cost = case_when(CONTROL == 1 ~ `NPT4_PUB-AVERAGE-ANNUAL-COST`,
CONTROL == 2 ~ NPT4_PRIV,
CONTROL == 3 ~ NPT4_PRIV)
)
finally_final_df <- final_df %>%
select('schname', 'month', 'st_index', 'cost', 'PREDDEG', 'SAT_AVG', 'CURROPER','md_earn_wne_p10-REPORTED-EARNINGS', 'C150_4_POOLED_SUPP-REPORTED-GRAD-RATE') %>%
filter(PREDDEG == 3, CURROPER == 1, `md_earn_wne_p10-REPORTED-EARNINGS` != 'PrivacySupressed') %>%
mutate(time = case_when(month >= as.Date("2015-09-01") ~ 1, month < as.date("2015-09-01") ~ 0)
View(finally_final_df)
finally_final_df <- final_df %>%
select('schname', 'month', 'st_index', 'cost', 'PREDDEG', 'SAT_AVG', 'CURROPER','md_earn_wne_p10-REPORTED-EARNINGS', 'C150_4_POOLED_SUPP-REPORTED-GRAD-RATE') %>%
filter(PREDDEG == 3, CURROPER == 1, `md_earn_wne_p10-REPORTED-EARNINGS` != 'PrivacySupressed') %>%
mutate(time = case_when(month >= as.Date('2015-09-01') ~ 1, month < as.date('2015-09-01') ~ 0)
finally_final_df <- final_df %>%
finally_final_df <- final_df %>%
select('schname', 'month', 'st_index', 'cost', 'PREDDEG', 'SAT_AVG', 'CURROPER','md_earn_wne_p10-REPORTED-EARNINGS', 'C150_4_POOLED_SUPP-REPORTED-GRAD-RATE') %>%
filter(PREDDEG == 3, CURROPER == 1, `md_earn_wne_p10-REPORTED-EARNINGS` != 'PrivacySupressed') %>%
mutate(time = case_when(month >= as.Date("2015-09-01") ~ 1, month < as.date("2015-09-01") ~ 0))
finally_final_df <- final_df %>%
select('schname', 'month', 'st_index', 'cost', 'PREDDEG', 'SAT_AVG', 'CURROPER','md_earn_wne_p10-REPORTED-EARNINGS', 'C150_4_POOLED_SUPP-REPORTED-GRAD-RATE') %>%
filter(PREDDEG == 3, CURROPER == 1, `md_earn_wne_p10-REPORTED-EARNINGS` != 'PrivacySupressed') %>%
mutate(time = case_when(month >= as.Date("2015-09-01") ~ 1, month < as.Date("2015-09-01") ~ 0))
View(finally_final_df)
finally_final_df <- finally_final_df %>%
mutate_if(is.character, as.numeric)
G_summary <- finally_final_df %>%
group_by(schname, month) %>%
summarize(
mean_index = mean(st_index),
annual_cost = unique(cost),
SAT = unique(SAT_AVG),
grad_rate = unique(`C150_4_POOLED_SUPP-REPORTED-GRAD-RATE`),
median_earnings = unique(`md_earn_wne_p10-REPORTED-EARNINGS`),
time = unique(time)
)
G_summary <- na.omit(G_summary)
G_summary <- G_summary %>% mutate(hi_low = case_when(median_earnings <= 36600 ~ 0, median_earnings > 47300 ~ 1))
knitr::opts_chunk$set(echo = TRUE)
## knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file()) HOW TO SET UP A WD?
# Installing packages
library(tidyverse)
library(purrr)
library(lubridate)
library(fixest)
# Preparing Google trends data
# Merging Google trends data
g_files <- list.files(pattern = 'trends_up_to', full.names = TRUE)
G_data <- map_df(g_files, read_csv)
G_data <- na.omit(G_data)
#Converting date from string to date format
#summary(G_data)
G_data <- G_data %>%
mutate(YMD = ymd(str_sub(G_data$monthorweek, end = 10)))
# creating a month variable for aggregation
G_data <- G_data %>% mutate(month = floor_date(YMD, unit = 'month'))
# Standardizing Index variable
G_data <- G_data %>%
group_by(schname, keyword) %>%
mutate(st_index = (index - mean(index))/sd(index))
#reading in the Scorecard Data
scorecard <- read_csv('Most+Recent+Cohorts+(Scorecard+Elements).csv')
scorecard <- na.omit(scorecard)
name_links <- read_csv('id_name_link.csv')
# removing duplicates
name_links <- name_links %>%
group_by(schname) %>%
mutate(n = n()) %>%
filter(n == 1)
# merging the data frames
g_trends_to_id_name <-
inner_join(G_data, name_links, by = 'schname')
final_df <- inner_join(g_trends_to_id_name, scorecard, by = c('unitid' = 'UNITID'))
final_df <- final_df %>%
mutate(
cost = case_when(CONTROL == 1 ~ `NPT4_PUB-AVERAGE-ANNUAL-COST`,
CONTROL == 2 ~ NPT4_PRIV,
CONTROL == 3 ~ NPT4_PRIV)
)
finally_final_df <- final_df %>%
select('schname', 'month', 'st_index', 'cost', 'PREDDEG', 'SAT_AVG', 'CURROPER','md_earn_wne_p10-REPORTED-EARNINGS', 'C150_4_POOLED_SUPP-REPORTED-GRAD-RATE') %>%
filter(PREDDEG == 3, CURROPER == 1, `md_earn_wne_p10-REPORTED-EARNINGS` != 'PrivacySupressed') %>%
mutate(time = case_when(month >= as.Date("2015-09-01") ~ 1, month < as.Date("2015-09-01") ~ 0))
finally_final_df <- finally_final_df %>%
mutate_if(is.character, as.numeric)
G_summary <- finally_final_df %>%
group_by(schname, month) %>%
summarize(
mean_index = mean(st_index),
annual_cost = unique(cost),
SAT = unique(SAT_AVG),
grad_rate = unique(`C150_4_POOLED_SUPP-REPORTED-GRAD-RATE`),
median_earnings = unique(`md_earn_wne_p10-REPORTED-EARNINGS`),
time = factor(time)
)
G_summary <- na.omit(G_summary)
G_summary <- G_summary %>% mutate(hi_low = case_when(median_earnings <= 36600 ~ 1, median_earnings < 41400 ~2, median_earnings < 47300 ~ 3, median_earnings > 47300 ~ 4)) %>% factor(hi_low)
G_summary <- G_summary %>% mutate(hi_low = case_when(median_earnings <= 36600 ~ 1, median_earnings < 41400 ~2, median_earnings < 47300 ~ 3, median_earnings > 47300 ~ 4))
G_summary <- G_summary %>% factor(hi_low)
G_summary <- G_summary %>% factor(as.charachter(hi_low))
View(G_summary)
G_summary <- G_summary %>% factor('hi_low')
G_summary$hi_low <- factor(G_summary$hi_low)
str(G_summary)
all_model <- feols(mean_index ~ time + hi_low, data = G_summary)
etable(all_model)
View(G_summary)
# Preparing Google trends data
# Merging Google trends data
g_files <- list.files(pattern = 'trends_up_to', full.names = TRUE)
G_data <- map_df(g_files, read_csv)
G_data <- na.omit(G_data)
#Converting date from string to date format
#summary(G_data)
G_data <- G_data %>%
mutate(YMD = ymd(str_sub(G_data$monthorweek, end = 10)))
# creating a month variable for aggregation
G_data <- G_data %>% mutate(month = floor_date(YMD, unit = 'month'))
# Standardizing Index variable
G_data <- G_data %>%
group_by(schname) %>%
mutate(st_index = (index - mean(index))/sd(index))
#reading in the Scorecard Data
scorecard <- read_csv('Most+Recent+Cohorts+(Scorecard+Elements).csv')
scorecard <- na.omit(scorecard)
name_links <- read_csv('id_name_link.csv')
# removing duplicates
name_links <- name_links %>%
group_by(schname) %>%
mutate(n = n()) %>%
filter(n == 1)
# merging the data frames
g_trends_to_id_name <-
inner_join(G_data, name_links, by = 'schname')
final_df <- inner_join(g_trends_to_id_name, scorecard, by = c('unitid' = 'UNITID'))
final_df <- final_df %>%
mutate(
cost = case_when(CONTROL == 1 ~ `NPT4_PUB-AVERAGE-ANNUAL-COST`,
CONTROL == 2 ~ NPT4_PRIV,
CONTROL == 3 ~ NPT4_PRIV)
)
finally_final_df <- final_df %>%
select('schname', 'month', 'st_index', 'cost', 'PREDDEG', 'SAT_AVG', 'CURROPER','md_earn_wne_p10-REPORTED-EARNINGS', 'C150_4_POOLED_SUPP-REPORTED-GRAD-RATE') %>%
filter(PREDDEG == 3, CURROPER == 1, `md_earn_wne_p10-REPORTED-EARNINGS` != 'PrivacySupressed') %>%
mutate(time = case_when(month >= as.Date("2015-09-01") ~ 1, month < as.Date("2015-09-01") ~ 0))
finally_final_df <- finally_final_df %>%
mutate_if(is.character, as.numeric)
G_summary <- finally_final_df %>%
group_by(schname, month) %>%
summarize(
mean_index = mean(st_index),
annual_cost = unique(cost),
SAT = unique(SAT_AVG),
grad_rate = unique(`C150_4_POOLED_SUPP-REPORTED-GRAD-RATE`),
median_earnings = unique(`md_earn_wne_p10-REPORTED-EARNINGS`),
time = factor(time)
)
G_summary <- na.omit(G_summary)
View(G_summary)
View(G_data)
G_summary <- finally_final_df %>%
group_by(schname, month) %>%
summarize(
mean_index = mean(st_index),
annual_cost = unique(cost),
SAT = unique(SAT_AVG),
grad_rate = unique(`C150_4_POOLED_SUPP-REPORTED-GRAD-RATE`),
median_earnings = unique(`md_earn_wne_p10-REPORTED-EARNINGS`),
time = factor(time)
)
G_summary <- na.omit(G_summary)
low_vs_high <- G_summary %>%
filter(hi_low == 1 | hi_low == 4) %>%
group_by(hi_low, month) %>%
summarize(index = mean(mean_index))%>%
ggplot(aes(x = month, y = index, colour = hi_low)) +
geom_line(aes(group = hi_low)) +
geom_point()
G_summary <- G_summary %>% mutate(hi_low = case_when(median_earnings <= 36600 ~ 1, median_earnings < 41400 ~2, median_earnings < 47300 ~ 3, median_earnings > 47300 ~ 4))
G_summary$hi_low <- factor(G_summary$hi_low)
low_vs_high <- G_summary %>%
filter(hi_low == 1 | hi_low == 4) %>%
group_by(hi_low, month) %>%
summarize(index = mean(mean_index))%>%
ggplot(aes(x = month, y = index, colour = hi_low)) +
geom_line(aes(group = hi_low)) +
geom_point()
low_vs_high
G_summary <- finally_final_df %>%
group_by(schname, month) %>%
summarize(
mean_index = mean(st_index),
annual_cost = unique(cost),
SAT = unique(SAT_AVG),
grad_rate = unique(`C150_4_POOLED_SUPP-REPORTED-GRAD-RATE`),
median_earnings = unique(`md_earn_wne_p10-REPORTED-EARNINGS`),
time = unique(time)
)
G_summary <- na.omit(G_summary)
G_summary <- G_summary %>% mutate(hi_low = case_when(median_earnings <= 36600 ~ 1, median_earnings < 41400 ~2, median_earnings < 47300 ~ 3, median_earnings > 47300 ~ 4))
G_summary$hi_low <- factor(G_summary$hi_low)
G_summary$time <- factor(G_summary$time)
low_vs_high <- G_summary %>%
filter(hi_low == 1 | hi_low == 4) %>%
group_by(hi_low, month) %>%
summarize(index = mean(mean_index))%>%
ggplot(aes(x = month, y = index, colour = hi_low)) +
geom_line(aes(group = hi_low)) +
geom_point()
low_vs_high
View(G_summary)
all_model <- feols(mean_index ~ time + hi_low, data = G_summary)
etable(all_model)
all_model <- feols(mean_index ~ time + hi_low, data = G_summary)
interaction <- feols(mean_index ~ month * time, data = G_summary)
fe_model <- feols(mean_index ~ time * hi_low | schname, data = G_summary)
etable(all_model, interaction, fe_model)
knitr::opts_chunk$set(echo = TRUE)
## knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
knitr::opts_chunk$set(echo = FALSE)
# Loading packages
library(tidyverse)
library(purrr)
library(lubridate)
library(fixest)
# Preparing Google trends data
# Merging Google trends data
g_files <- list.files(path="../data", pattern = 'trends_up_to', full.names = TRUE)
G_data <- map_df(g_files, read_csv)
G_data <- na.omit(G_data)
#Converting date from string to date format
G_data <- G_data %>%
mutate(YMD = ymd(str_sub(G_data$monthorweek, end = 10)))
# creating a month variable for aggregation
G_data <- G_data %>% mutate(month = floor_date(YMD, unit = 'month'))
# Standardizing Index variable
G_data <- G_data %>%
group_by(schname) %>%
mutate(st_index = (index - mean(index))/sd(index))
#reading in the Scorecard Data
scorecard <- read_csv('../data/Most+Recent+Cohorts+(Scorecard+Elements).csv')
scorecard <- na.omit(scorecard)
name_links <- read_csv('../data/id_name_link.csv')
# removing duplicates
name_links <- name_links %>%
group_by(schname) %>%
mutate(n = n()) %>%
filter(n == 1)
# merging the data frames
g_trends_to_id_name <-
inner_join(G_data, name_links, by = 'schname')
final_df <- inner_join(g_trends_to_id_name, scorecard, by = c('unitid' = 'UNITID'))
# Creating one cost variable
final_df <- final_df %>%
mutate(
cost = case_when(CONTROL == 1 ~ `NPT4_PUB-AVERAGE-ANNUAL-COST`,
CONTROL == 2 ~ NPT4_PRIV,
CONTROL == 3 ~ NPT4_PRIV)
)
# preparing the final DF for analysis
#select variables that we need and filter out non-predominantly BA colleges as well as closed colleges and creating Time variable for before and after scorecard
finally_final_df <- final_df %>%
select('schname', 'month', 'st_index', 'cost', 'PREDDEG', 'SAT_AVG', 'CURROPER','md_earn_wne_p10-REPORTED-EARNINGS', 'C150_4_POOLED_SUPP-REPORTED-GRAD-RATE') %>%
filter(PREDDEG == 3, CURROPER == 1, `md_earn_wne_p10-REPORTED-EARNINGS` != 'PrivacySupressed') %>%
mutate(time = case_when(month >= as.Date("2015-09-01") ~ 1, month < as.Date("2015-09-01") ~ 0))
#Converting character to numeric to create NAs so that we can clean them out
finally_final_df <- finally_final_df %>%
mutate_if(is.character, as.numeric)
# final summarized df
G_summary <- finally_final_df %>%
group_by(schname, month) %>%
summarize(
mean_index = mean(st_index),
annual_cost = unique(cost),
SAT = unique(SAT_AVG),
grad_rate = unique(`C150_4_POOLED_SUPP-REPORTED-GRAD-RATE`),
median_earnings = unique(`md_earn_wne_p10-REPORTED-EARNINGS`),
time = unique(time)
)
G_summary <- na.omit(G_summary)
#Looking at how median income is distributed between quartiles
quantile(G_summary$median_earnings)
#0%    25%    50%    75%   100%
#17600  36600  41400  47300 116400
#Creating variable for groups by graduate earnings
G_summary <- G_summary %>% mutate(hi_low = case_when(median_earnings <= 36600 ~ 1, median_earnings < 41400 ~2, median_earnings < 47300 ~ 3, median_earnings > 47300 ~ 4)) %>%
filter(hi_low != 2 & hi_low != 3)
G_summary$hi_low <- factor(G_summary$hi_low)
G_summary$time <- factor(G_summary$time)
#Graphical analysis
low_vs_high <- G_summary %>%
group_by(hi_low, month) %>%
summarize(index = mean(mean_index))%>%
ggplot(aes(x = month, y = index, colour = factor(hi_low, labels = c('Low median earnings', 'High median earnings')))) +
geom_line(aes(group = hi_low))+
geom_vline(aes(xintercept = as.Date('2015-09-01')), color = 'blue') +
theme_classic() +
theme(axis.title.x = element_blank()) +
labs(y = "Mean Google search index",
color = element_blank(),
title = "Google search trends over time for colleges with high and low median earnings")
low_vs_high
#comparing the means just to get the genetal idea
comp_means <- G_summary %>%
group_by(hi_low, time) %>%
summarize(mean(mean_index))
comp_means
# looking if the decrease over time we see on the graph is significant (for all colleges)
G_summary_full <- finally_final_df %>%
group_by(schname, month) %>%
summarize(
mean_index = mean(st_index),
median_earnings = unique(`md_earn_wne_p10-REPORTED-EARNINGS`),
time = unique(time)
)
G_summary_full <- na.omit(G_summary_full)
time_trends <- feols(mean_index ~ month, data = G_summary_full)
summary(time_trends)
#model 1
model1 <- feols(mean_index ~ time * hi_low, data = G_summary, vcov = 'hetero')
# model 1 over time
model1_time <- feols(mean_index ~ time * hi_low + month, data = G_summary, vcov = 'hetero')
# Adding fixed effects for seasonality
G_seasonal <- mutate(G_summary, m_o_y = month(month))
model_seasonal <- feols(mean_index ~ time * hi_low | m_o_y, data = G_seasonal, vcov = 'hetero')
#
model_seasonal_time <- feols(mean_index ~ time * hi_low + month| m_o_y, data = G_seasonal, vcov = 'hetero')
etable(model1, model1_time, model_seasonal, model_seasonal_time)
etable(model1, model1_time, model_seasonal, model_seasonal_time)
# model 1 over time
model1_time <- feols(mean_index ~ time * hi_low + month, data = G_summary, vcov = 'hetero')
# Adding fixed effects for seasonality
G_seasonal <- mutate(G_summary, m_o_y = month(month))
#
model_seasonal_time <- feols(mean_index ~ time * hi_low + month| m_o_y, data = G_seasonal, vcov = 'hetero')
etable(model1_time, model_seasonal_time)
